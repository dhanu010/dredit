/* Added by Juan Garcia, used AboutServlet.java as template on code*/
package edu.csus.dredit;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



import com.google.api.services.drive.Drive;
//import com.google.api.client.googleapis.json.GoogleJsonResponseException;
//import com.google.api.services.oauth2.Oauth2;
//import com.google.api.services.oauth2.model.Userinfoplus;
import com.google.gson.JsonObject;  //added by Juan to manipulate JSON data
import com.google.api.services.drive.model.File;  //added for File manipulation
import com.google.api.client.http.ByteArrayContent;
import com.google.api.client.http.FileContent;



/**
 * Servlet that will handle the credit card report generation of a currently logged-in user.
 *
 * @author Juan Garcia
 */
@SuppressWarnings("serial")
public class CCReportServlet extends DrEditServlet 
{
	private static String JSON_REPORT_TYPE_LABEL = "reportType";
	private static String JSON_SELECT_VALUE_LABEL = "selectValue";
	private static String JSON_FILE_NAME_LABEL = "fileName";
	private static String JSON_REPORT_SUMMARY = "summary";
	private static String JSON_REPORT_BY_CREDIT_CARD = "byCreditCard";
	private static String JSON_REPORT_BY_MONTH = "byMonth";
	
	private static String FILE_DESCRIPTION = "Report generated by credit card debt viewer";
	private static String FILE_MIME_TYPE = "text/plain";
	private static String FILE_CCREPORT = "ccReport.txt";
  /**
   * Generates a report.  There are 3 possible report types: summary report, by month, or by credit card.
   * Information will be passed down, and the "reportType" will hold one of 3 values: {"summary","byMonth","byCreditCard"}
   * If the "reportType" is different, no report will be generated and an error will be returned.
   * The attribute "fileName" will contain the name of the file to be created
   */
  @Override
  public void doGet(HttpServletRequest req, HttpServletResponse resp)
      throws IOException 
  {
	   String reportType = req.getParameter(JSON_REPORT_TYPE_LABEL);
	   String fileName = req.getParameter(JSON_FILE_NAME_LABEL);
	    
	    if(reportType.equals(JSON_REPORT_SUMMARY))
	    {
	    	//TODO: add the code here that will generate the report, and pass in the data
	    	//into the createReportFile function (for now, it is passed in as a string)

	    	JsonObject returnObject = createReportFile(req,resp,fileName, JSON_REPORT_SUMMARY, "Amazing Report Coming Soon...");
		       
	    	sendJson(resp, returnObject);
	    	//generate report by summary
	    } 
	    
	    else if(reportType.equals(JSON_REPORT_BY_CREDIT_CARD))
	    {
	    	
	    	//generate report by credit card
	    }
	    
	    else if(reportType.equals(JSON_REPORT_BY_MONTH))
	    {
	    	//generate report by month
	    }
	    
	    else //error - the report requested is not one of the available
	    {
	    	//generate error code
	    }    
  }
  
  /*helper function that will create the summary report
   * TODO: find a better way to store the content, instead of in a BIG-O string (once the file becomes long)
   * */
  private JsonObject createReportFile(HttpServletRequest req, HttpServletResponse resp, 
		  String fileName, String reportType, String content)
  {
	  	JsonObject returnObject = new JsonObject();
  		//next two properties are added for debugging purposes
  		returnObject.addProperty("ReportTypeIsNow", reportType);
	    returnObject.addProperty("fileNameThatWasPassedDownWas", fileName);

	    //TODO: move creation of file to the class that handles credit card tasks
	    //CODE TO CREATE A NEW FILE, FOR NOW, DOESN'T HAVE MUCH
	    Drive service = getDriveService(getCredential(req, resp));
	    // File's metadata.
	    File body = new File();
	    body.setTitle(fileName);
	    body.setDescription(FILE_DESCRIPTION);
	    body.setMimeType(FILE_MIME_TYPE);

	    try {
	    	service.files().insert(body, 
	    			ByteArrayContent.fromString(FILE_MIME_TYPE, content)).execute();
	    	returnObject.addProperty("Otherstatus", "good");
	    } catch (IOException e) {
	    	returnObject.addProperty("Otherstatus","BAD:" + e);
	    }
	  return returnObject;
  }
}
